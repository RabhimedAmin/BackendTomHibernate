package com.tn.itserv.tom.entities;
// Generated 13 mai 2020 ï¿½ 05:42:52 by Hibernate Tools 5.2.12.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * PrmDemEtatOp generated by hbm2java
 */
@Entity
@Table(name = "PRM_DEM_ETAT_OP", schema = "TOM")
public class PrmDemEtatOp implements java.io.Serializable {

	private PrmDemEtatOpId id;
	private Operation operation;
	private PrmDemEtat prmDemEtat;
	private Short ordre;
	private Set<PrmEtatMapping> prmEtatMappings = new HashSet<PrmEtatMapping>(0);

	public PrmDemEtatOp() {
	}

	public PrmDemEtatOp(PrmDemEtatOpId id, Operation operation, PrmDemEtat prmDemEtat) {
		this.id = id;
		this.operation = operation;
		this.prmDemEtat = prmDemEtat;
	}

	public PrmDemEtatOp(PrmDemEtatOpId id, Operation operation, PrmDemEtat prmDemEtat, Short ordre,
			Set<PrmEtatMapping> prmEtatMappings) {
		this.id = id;
		this.operation = operation;
		this.prmDemEtat = prmDemEtat;
		this.ordre = ordre;
		this.prmEtatMappings = prmEtatMappings;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "COp", column = @Column(name = "C_OP", nullable = false, length = 20)),
			@AttributeOverride(name = "noEtat", column = @Column(name = "NO_ETAT", nullable = false, precision = 3, scale = 0)) })
	public PrmDemEtatOpId getId() {
		return this.id;
	}

	public void setId(PrmDemEtatOpId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "C_OP", nullable = false, insertable = false, updatable = false)
	public Operation getOperation() {
		return this.operation;
	}

	public void setOperation(Operation operation) {
		this.operation = operation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "NO_ETAT", nullable = false, insertable = false, updatable = false)
	public PrmDemEtat getPrmDemEtat() {
		return this.prmDemEtat;
	}

	public void setPrmDemEtat(PrmDemEtat prmDemEtat) {
		this.prmDemEtat = prmDemEtat;
	}

	@Column(name = "ORDRE", precision = 3, scale = 0)
	public Short getOrdre() {
		return this.ordre;
	}

	public void setOrdre(Short ordre) {
		this.ordre = ordre;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "prmDemEtatOp")
	public Set<PrmEtatMapping> getPrmEtatMappings() {
		return this.prmEtatMappings;
	}

	public void setPrmEtatMappings(Set<PrmEtatMapping> prmEtatMappings) {
		this.prmEtatMappings = prmEtatMappings;
	}

}
