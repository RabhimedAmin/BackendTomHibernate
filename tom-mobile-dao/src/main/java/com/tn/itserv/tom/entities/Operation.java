package com.tn.itserv.tom.entities;
// Generated 13 mai 2020 ï¿½ 05:42:52 by Hibernate Tools 5.2.12.Final

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Operation generated by hbm2java
 */
@Entity
@Table(name = "OPERATION", schema = "TOM")
public class Operation implements java.io.Serializable {

	private String COp;
	private Operation operation;
	private String operation_1;
	private String sysSrc;
	private String COpSrc;
	private boolean FComplexe;
	private byte typeOp;
	private byte typeSupport;
	private Short jalon;
	private String idProcess;
	private BigDecimal cptOp;
	private Set<PrmOtType> prmOtTypes = new HashSet<PrmOtType>(0);
	private Set<PrmOtMotif> prmOtMotifs = new HashSet<PrmOtMotif>(0);
	private Set<PrmOpOtPart> prmOpOtParts = new HashSet<PrmOpOtPart>(0);
	private Set<Demande> demandes = new HashSet<Demande>(0);
	private Set<BillingParamEvent> billingParamEvents = new HashSet<BillingParamEvent>(0);
	private Set<PrmDemMotif> prmDemMotifs = new HashSet<PrmDemMotif>(0);
	private Set<PrmTypeServ> prmTypeServs = new HashSet<PrmTypeServ>(0);
	private Set<PrmDemEtatOp> prmDemEtatOps = new HashSet<PrmDemEtatOp>(0);
	private Set<Operation> operations = new HashSet<Operation>(0);
	private Set<SousProcessus> sousProcessuses = new HashSet<SousProcessus>(0);

	public Operation() {
	}

	public Operation(String COp, String operation_1, String sysSrc, String COpSrc, boolean FComplexe, byte typeOp,
			byte typeSupport) {
		this.COp = COp;
		this.operation_1 = operation_1;
		this.sysSrc = sysSrc;
		this.COpSrc = COpSrc;
		this.FComplexe = FComplexe;
		this.typeOp = typeOp;
		this.typeSupport = typeSupport;
	}

	public Operation(String COp, Operation operation, String operation_1, String sysSrc, String COpSrc,
			boolean FComplexe, byte typeOp, byte typeSupport, Short jalon, String idProcess, BigDecimal cptOp,
			Set<PrmOtType> prmOtTypes, Set<PrmOtMotif> prmOtMotifs, Set<PrmOpOtPart> prmOpOtParts,
			Set<Demande> demandes, Set<BillingParamEvent> billingParamEvents, Set<PrmDemMotif> prmDemMotifs,
			Set<PrmTypeServ> prmTypeServs, Set<PrmDemEtatOp> prmDemEtatOps, Set<Operation> operations,
			Set<SousProcessus> sousProcessuses) {
		this.COp = COp;
		this.operation = operation;
		this.operation_1 = operation_1;
		this.sysSrc = sysSrc;
		this.COpSrc = COpSrc;
		this.FComplexe = FComplexe;
		this.typeOp = typeOp;
		this.typeSupport = typeSupport;
		this.jalon = jalon;
		this.idProcess = idProcess;
		this.cptOp = cptOp;
		this.prmOtTypes = prmOtTypes;
		this.prmOtMotifs = prmOtMotifs;
		this.prmOpOtParts = prmOpOtParts;
		this.demandes = demandes;
		this.billingParamEvents = billingParamEvents;
		this.prmDemMotifs = prmDemMotifs;
		this.prmTypeServs = prmTypeServs;
		this.prmDemEtatOps = prmDemEtatOps;
		this.operations = operations;
		this.sousProcessuses = sousProcessuses;
	}

	@Id

	@Column(name = "C_OP", unique = true, nullable = false, length = 20)
	public String getCOp() {
		return this.COp;
	}

	public void setCOp(String COp) {
		this.COp = COp;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "C_OP_MERE")
	public Operation getOperation() {
		return this.operation;
	}

	public void setOperation(Operation operation) {
		this.operation = operation;
	}

	@Column(name = "OPERATION", nullable = false, length = 100)
	public String getOperation_1() {
		return this.operation_1;
	}

	public void setOperation_1(String operation_1) {
		this.operation_1 = operation_1;
	}

	@Column(name = "SYS_SRC", nullable = false, length = 50)
	public String getSysSrc() {
		return this.sysSrc;
	}

	public void setSysSrc(String sysSrc) {
		this.sysSrc = sysSrc;
	}

	@Column(name = "C_OP_SRC", nullable = false, length = 50)
	public String getCOpSrc() {
		return this.COpSrc;
	}

	public void setCOpSrc(String COpSrc) {
		this.COpSrc = COpSrc;
	}

	@Column(name = "F_COMPLEXE", nullable = false, precision = 1, scale = 0)
	public boolean isFComplexe() {
		return this.FComplexe;
	}

	public void setFComplexe(boolean FComplexe) {
		this.FComplexe = FComplexe;
	}

	@Column(name = "TYPE_OP", nullable = false, precision = 2, scale = 0)
	public byte getTypeOp() {
		return this.typeOp;
	}

	public void setTypeOp(byte typeOp) {
		this.typeOp = typeOp;
	}

	@Column(name = "TYPE_SUPPORT", nullable = false, precision = 2, scale = 0)
	public byte getTypeSupport() {
		return this.typeSupport;
	}

	public void setTypeSupport(byte typeSupport) {
		this.typeSupport = typeSupport;
	}

	@Column(name = "JALON", precision = 3, scale = 0)
	public Short getJalon() {
		return this.jalon;
	}

	public void setJalon(Short jalon) {
		this.jalon = jalon;
	}

	@Column(name = "ID_PROCESS", length = 100)
	public String getIdProcess() {
		return this.idProcess;
	}

	public void setIdProcess(String idProcess) {
		this.idProcess = idProcess;
	}

	@Column(name = "CPT_OP", precision = 22, scale = 0)
	public BigDecimal getCptOp() {
		return this.cptOp;
	}

	public void setCptOp(BigDecimal cptOp) {
		this.cptOp = cptOp;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "PRM_TYPE_OT_OP", schema = "TOM", joinColumns = {
			@JoinColumn(name = "C_OP", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "C_TYPE_OT", nullable = false, updatable = false) })
	public Set<PrmOtType> getPrmOtTypes() {
		return this.prmOtTypes;
	}

	public void setPrmOtTypes(Set<PrmOtType> prmOtTypes) {
		this.prmOtTypes = prmOtTypes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "operation")
	public Set<PrmOtMotif> getPrmOtMotifs() {
		return this.prmOtMotifs;
	}

	public void setPrmOtMotifs(Set<PrmOtMotif> prmOtMotifs) {
		this.prmOtMotifs = prmOtMotifs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "operation")
	public Set<PrmOpOtPart> getPrmOpOtParts() {
		return this.prmOpOtParts;
	}

	public void setPrmOpOtParts(Set<PrmOpOtPart> prmOpOtParts) {
		this.prmOpOtParts = prmOpOtParts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "operation")
	public Set<Demande> getDemandes() {
		return this.demandes;
	}

	public void setDemandes(Set<Demande> demandes) {
		this.demandes = demandes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "operation")
	public Set<BillingParamEvent> getBillingParamEvents() {
		return this.billingParamEvents;
	}

	public void setBillingParamEvents(Set<BillingParamEvent> billingParamEvents) {
		this.billingParamEvents = billingParamEvents;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "operation")
	public Set<PrmDemMotif> getPrmDemMotifs() {
		return this.prmDemMotifs;
	}

	public void setPrmDemMotifs(Set<PrmDemMotif> prmDemMotifs) {
		this.prmDemMotifs = prmDemMotifs;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "PRM_TYPE_SERV_OP", schema = "TOM", joinColumns = {
			@JoinColumn(name = "C_OP", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "C_TYPE_SERV", nullable = false, updatable = false) })
	public Set<PrmTypeServ> getPrmTypeServs() {
		return this.prmTypeServs;
	}

	public void setPrmTypeServs(Set<PrmTypeServ> prmTypeServs) {
		this.prmTypeServs = prmTypeServs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "operation")
	public Set<PrmDemEtatOp> getPrmDemEtatOps() {
		return this.prmDemEtatOps;
	}

	public void setPrmDemEtatOps(Set<PrmDemEtatOp> prmDemEtatOps) {
		this.prmDemEtatOps = prmDemEtatOps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "operation")
	public Set<Operation> getOperations() {
		return this.operations;
	}

	public void setOperations(Set<Operation> operations) {
		this.operations = operations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "operation")
	public Set<SousProcessus> getSousProcessuses() {
		return this.sousProcessuses;
	}

	public void setSousProcessuses(Set<SousProcessus> sousProcessuses) {
		this.sousProcessuses = sousProcessuses;
	}

}
