package com.tn.itserv.tom.entities;
// Generated 13 mai 2020 ï¿½ 05:42:52 by Hibernate Tools 5.2.12.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Unite generated by hbm2java
 */
@Entity
@Table(name = "UNITE", schema = "TOM")
public class Unite implements java.io.Serializable {

	private String CUnite;
	private Partenaire partenaire;
	private Region region;
	private Unite unite;
	private UniteType uniteType;
	private String unite_1;
	private Date DCreation;
	private String loginCreation;
	private Date DModif;
	private String loginModif;
	private Set<Localite> localites = new HashSet<Localite>(0);
	private Set<Agent> agents = new HashSet<Agent>(0);
	private Set<DunningOt> dunningOts = new HashSet<DunningOt>(0);
	private Set<Equipe> equipes = new HashSet<Equipe>(0);
	private Set<Utilisateur> utilisateurs = new HashSet<Utilisateur>(0);
	private Set<Ot> ots = new HashSet<Ot>(0);
	private Set<Unite> unites = new HashSet<Unite>(0);

	public Unite() {
	}

	public Unite(String CUnite, UniteType uniteType, String unite_1) {
		this.CUnite = CUnite;
		this.uniteType = uniteType;
		this.unite_1 = unite_1;
	}

	public Unite(String CUnite, Partenaire partenaire, Region region, Unite unite, UniteType uniteType, String unite_1,
			Date DCreation, String loginCreation, Date DModif, String loginModif, Set<Localite> localites,
			Set<Agent> agents, Set<DunningOt> dunningOts, Set<Equipe> equipes, Set<Utilisateur> utilisateurs,
			Set<Ot> ots, Set<Unite> unites) {
		this.CUnite = CUnite;
		this.partenaire = partenaire;
		this.region = region;
		this.unite = unite;
		this.uniteType = uniteType;
		this.unite_1 = unite_1;
		this.DCreation = DCreation;
		this.loginCreation = loginCreation;
		this.DModif = DModif;
		this.loginModif = loginModif;
		this.localites = localites;
		this.agents = agents;
		this.dunningOts = dunningOts;
		this.equipes = equipes;
		this.utilisateurs = utilisateurs;
		this.ots = ots;
		this.unites = unites;
	}

	@Id

	@Column(name = "C_UNITE", unique = true, nullable = false, length = 20)
	public String getCUnite() {
		return this.CUnite;
	}

	public void setCUnite(String CUnite) {
		this.CUnite = CUnite;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "C_PART")
	public Partenaire getPartenaire() {
		return this.partenaire;
	}

	public void setPartenaire(Partenaire partenaire) {
		this.partenaire = partenaire;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "C_REGION")
	public Region getRegion() {
		return this.region;
	}

	public void setRegion(Region region) {
		this.region = region;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "C_UNITE_MERE")
	public Unite getUnite() {
		return this.unite;
	}

	public void setUnite(Unite unite) {
		this.unite = unite;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "C_TYPE_UNITE", nullable = false)
	public UniteType getUniteType() {
		return this.uniteType;
	}

	public void setUniteType(UniteType uniteType) {
		this.uniteType = uniteType;
	}

	@Column(name = "UNITE", nullable = false, length = 100)
	public String getUnite_1() {
		return this.unite_1;
	}

	public void setUnite_1(String unite_1) {
		this.unite_1 = unite_1;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "D_CREATION", length = 11)
	public Date getDCreation() {
		return this.DCreation;
	}

	public void setDCreation(Date DCreation) {
		this.DCreation = DCreation;
	}

	@Column(name = "LOGIN_CREATION", length = 20)
	public String getLoginCreation() {
		return this.loginCreation;
	}

	public void setLoginCreation(String loginCreation) {
		this.loginCreation = loginCreation;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "D_MODIF", length = 11)
	public Date getDModif() {
		return this.DModif;
	}

	public void setDModif(Date DModif) {
		this.DModif = DModif;
	}

	@Column(name = "LOGIN_MODIF", length = 20)
	public String getLoginModif() {
		return this.loginModif;
	}

	public void setLoginModif(String loginModif) {
		this.loginModif = loginModif;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "unites")
	public Set<Localite> getLocalites() {
		return this.localites;
	}

	public void setLocalites(Set<Localite> localites) {
		this.localites = localites;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unite")
	public Set<Agent> getAgents() {
		return this.agents;
	}

	public void setAgents(Set<Agent> agents) {
		this.agents = agents;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unite")
	public Set<DunningOt> getDunningOts() {
		return this.dunningOts;
	}

	public void setDunningOts(Set<DunningOt> dunningOts) {
		this.dunningOts = dunningOts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unite")
	public Set<Equipe> getEquipes() {
		return this.equipes;
	}

	public void setEquipes(Set<Equipe> equipes) {
		this.equipes = equipes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unite")
	public Set<Utilisateur> getUtilisateurs() {
		return this.utilisateurs;
	}

	public void setUtilisateurs(Set<Utilisateur> utilisateurs) {
		this.utilisateurs = utilisateurs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unite")
	public Set<Ot> getOts() {
		return this.ots;
	}

	public void setOts(Set<Ot> ots) {
		this.ots = ots;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unite")
	public Set<Unite> getUnites() {
		return this.unites;
	}

	public void setUnites(Set<Unite> unites) {
		this.unites = unites;
	}

}
