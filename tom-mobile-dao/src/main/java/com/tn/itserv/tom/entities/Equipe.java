package com.tn.itserv.tom.entities;
// Generated 13 mai 2020 ï¿½ 05:42:52 by Hibernate Tools 5.2.12.Final

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Equipe generated by hbm2java
 */
@Entity
@Table(name = "EQUIPE", schema = "TOM")
public class Equipe implements java.io.Serializable {

	private BigDecimal idEquipe;
	private Unite unite;
	private String equipe;
	private String obs;
	private Date DCreation;
	private String loginCreation;
	private Date DModif;
	private String loginModif;
	private Set<DunningOt> dunningOts = new HashSet<DunningOt>(0);
	private Set<Utilisateur> utilisateurs = new HashSet<Utilisateur>(0);
	private Set<EquipeRess> equipeResses = new HashSet<EquipeRess>(0);
	private Set<Ot> ots = new HashSet<Ot>(0);

	public Equipe() {
	}

	public Equipe(BigDecimal idEquipe, String equipe) {
		this.idEquipe = idEquipe;
		this.equipe = equipe;
	}

	public Equipe(BigDecimal idEquipe, Unite unite, String equipe, String obs, Date DCreation, String loginCreation,
			Date DModif, String loginModif, Set<DunningOt> dunningOts, Set<Utilisateur> utilisateurs,
			Set<EquipeRess> equipeResses, Set<Ot> ots) {
		this.idEquipe = idEquipe;
		this.unite = unite;
		this.equipe = equipe;
		this.obs = obs;
		this.DCreation = DCreation;
		this.loginCreation = loginCreation;
		this.DModif = DModif;
		this.loginModif = loginModif;
		this.dunningOts = dunningOts;
		this.utilisateurs = utilisateurs;
		this.equipeResses = equipeResses;
		this.ots = ots;
	}

	@Id

	@Column(name = "ID_EQUIPE", unique = true, nullable = false, precision = 22, scale = 0)
	public BigDecimal getIdEquipe() {
		return this.idEquipe;
	}

	public void setIdEquipe(BigDecimal idEquipe) {
		this.idEquipe = idEquipe;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "C_UNITE")
	public Unite getUnite() {
		return this.unite;
	}

	public void setUnite(Unite unite) {
		this.unite = unite;
	}

	@Column(name = "EQUIPE", nullable = false, length = 100)
	public String getEquipe() {
		return this.equipe;
	}

	public void setEquipe(String equipe) {
		this.equipe = equipe;
	}

	@Column(name = "OBS", length = 500)
	public String getObs() {
		return this.obs;
	}

	public void setObs(String obs) {
		this.obs = obs;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "D_CREATION", length = 11)
	public Date getDCreation() {
		return this.DCreation;
	}

	public void setDCreation(Date DCreation) {
		this.DCreation = DCreation;
	}

	@Column(name = "LOGIN_CREATION", length = 20)
	public String getLoginCreation() {
		return this.loginCreation;
	}

	public void setLoginCreation(String loginCreation) {
		this.loginCreation = loginCreation;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "D_MODIF", length = 11)
	public Date getDModif() {
		return this.DModif;
	}

	public void setDModif(Date DModif) {
		this.DModif = DModif;
	}

	@Column(name = "LOGIN_MODIF", length = 20)
	public String getLoginModif() {
		return this.loginModif;
	}

	public void setLoginModif(String loginModif) {
		this.loginModif = loginModif;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "equipe")
	public Set<DunningOt> getDunningOts() {
		return this.dunningOts;
	}

	public void setDunningOts(Set<DunningOt> dunningOts) {
		this.dunningOts = dunningOts;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "EQUIPE_VALID", schema = "TOM", joinColumns = {
			@JoinColumn(name = "ID_EQUIPE", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "LOGIN", nullable = false, updatable = false) })
	public Set<Utilisateur> getUtilisateurs() {
		return this.utilisateurs;
	}

	public void setUtilisateurs(Set<Utilisateur> utilisateurs) {
		this.utilisateurs = utilisateurs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "equipe")
	public Set<EquipeRess> getEquipeResses() {
		return this.equipeResses;
	}

	public void setEquipeResses(Set<EquipeRess> equipeResses) {
		this.equipeResses = equipeResses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "equipe")
	public Set<Ot> getOts() {
		return this.ots;
	}

	public void setOts(Set<Ot> ots) {
		this.ots = ots;
	}

}
