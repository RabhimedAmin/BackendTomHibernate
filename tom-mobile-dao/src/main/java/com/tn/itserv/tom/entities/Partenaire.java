package com.tn.itserv.tom.entities;
// Generated 13 mai 2020 ï¿½ 05:42:52 by Hibernate Tools 5.2.12.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Partenaire generated by hbm2java
 */
@Entity
@Table(name = "PARTENAIRE", schema = "TOM")
public class Partenaire implements java.io.Serializable {

	private String CPart;
	private PartenaireType partenaireType;
	private String part;
	private String CPartSrc;
	private Set<Parc> parcs = new HashSet<Parc>(0);
	private Set<BillingEvent> billingEvents = new HashSet<BillingEvent>(0);
	private Set<ParcServSuivi> parcServSuivis = new HashSet<ParcServSuivi>(0);
	private Set<Unite> unites = new HashSet<Unite>(0);
	private Set<Demande> demandes = new HashSet<Demande>(0);
	private Set<PrmEtatMapping> prmEtatMappings = new HashSet<PrmEtatMapping>(0);
	private Set<PrmOpOtPart> prmOpOtParts = new HashSet<PrmOpOtPart>(0);
	private Set<ParcServ> parcServs = new HashSet<ParcServ>(0);
	private Set<BillingParamEvent> billingParamEvents = new HashSet<BillingParamEvent>(0);

	public Partenaire() {
	}

	public Partenaire(String CPart, PartenaireType partenaireType, String part) {
		this.CPart = CPart;
		this.partenaireType = partenaireType;
		this.part = part;
	}

	public Partenaire(String CPart, PartenaireType partenaireType, String part, String CPartSrc, Set<Parc> parcs,
			Set<BillingEvent> billingEvents, Set<ParcServSuivi> parcServSuivis, Set<Unite> unites,
			Set<Demande> demandes, Set<PrmEtatMapping> prmEtatMappings, Set<PrmOpOtPart> prmOpOtParts,
			Set<ParcServ> parcServs, Set<BillingParamEvent> billingParamEvents) {
		this.CPart = CPart;
		this.partenaireType = partenaireType;
		this.part = part;
		this.CPartSrc = CPartSrc;
		this.parcs = parcs;
		this.billingEvents = billingEvents;
		this.parcServSuivis = parcServSuivis;
		this.unites = unites;
		this.demandes = demandes;
		this.prmEtatMappings = prmEtatMappings;
		this.prmOpOtParts = prmOpOtParts;
		this.parcServs = parcServs;
		this.billingParamEvents = billingParamEvents;
	}

	@Id

	@Column(name = "C_PART", unique = true, nullable = false, length = 20)
	public String getCPart() {
		return this.CPart;
	}

	public void setCPart(String CPart) {
		this.CPart = CPart;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "C_TYPE_PART", nullable = false)
	public PartenaireType getPartenaireType() {
		return this.partenaireType;
	}

	public void setPartenaireType(PartenaireType partenaireType) {
		this.partenaireType = partenaireType;
	}

	@Column(name = "PART", nullable = false, length = 100)
	public String getPart() {
		return this.part;
	}

	public void setPart(String part) {
		this.part = part;
	}

	@Column(name = "C_PART_SRC", length = 20)
	public String getCPartSrc() {
		return this.CPartSrc;
	}

	public void setCPartSrc(String CPartSrc) {
		this.CPartSrc = CPartSrc;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "partenaire")
	public Set<Parc> getParcs() {
		return this.parcs;
	}

	public void setParcs(Set<Parc> parcs) {
		this.parcs = parcs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "partenaire")
	public Set<BillingEvent> getBillingEvents() {
		return this.billingEvents;
	}

	public void setBillingEvents(Set<BillingEvent> billingEvents) {
		this.billingEvents = billingEvents;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "partenaire")
	public Set<ParcServSuivi> getParcServSuivis() {
		return this.parcServSuivis;
	}

	public void setParcServSuivis(Set<ParcServSuivi> parcServSuivis) {
		this.parcServSuivis = parcServSuivis;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "partenaire")
	public Set<Unite> getUnites() {
		return this.unites;
	}

	public void setUnites(Set<Unite> unites) {
		this.unites = unites;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "partenaire")
	public Set<Demande> getDemandes() {
		return this.demandes;
	}

	public void setDemandes(Set<Demande> demandes) {
		this.demandes = demandes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "partenaire")
	public Set<PrmEtatMapping> getPrmEtatMappings() {
		return this.prmEtatMappings;
	}

	public void setPrmEtatMappings(Set<PrmEtatMapping> prmEtatMappings) {
		this.prmEtatMappings = prmEtatMappings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "partenaire")
	public Set<PrmOpOtPart> getPrmOpOtParts() {
		return this.prmOpOtParts;
	}

	public void setPrmOpOtParts(Set<PrmOpOtPart> prmOpOtParts) {
		this.prmOpOtParts = prmOpOtParts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "partenaire")
	public Set<ParcServ> getParcServs() {
		return this.parcServs;
	}

	public void setParcServs(Set<ParcServ> parcServs) {
		this.parcServs = parcServs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "partenaire")
	public Set<BillingParamEvent> getBillingParamEvents() {
		return this.billingParamEvents;
	}

	public void setBillingParamEvents(Set<BillingParamEvent> billingParamEvents) {
		this.billingParamEvents = billingParamEvents;
	}

}
